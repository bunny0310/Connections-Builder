apiVersion: apps/v1
kind: Deployment
metadata:
  name: users-service
spec:
  selector:
    matchLabels:
      app: users-service
  template:
    metadata:
      labels:
        app: users-service
    spec:
      containers:
      - name: users-service-container
        image: gcr.io/users-service-289022/users-service:v1
        imagePullPolicy: Always
        ports:
          - containerPort: 8080
            name: app-port
            protocol: TCP
          - containerPort: 8081
            name: admin-port
            protocol: TCP

        # ... other container configuration
        env:
        - name: DB_USER
          valueFrom:          
            secretKeyRef:
              name: cloudsql-db-credentials
              key: username
        - name: DB_PASS
          valueFrom:
            secretKeyRef:
              name: cloudsql-db-credentials
              key: password
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: cloudsql-db-credentials
              key: database
      - name: cloud-sql-proxy
        # It is recommended to use the latest version of the Cloud SQL proxy
        # Make sure to update on a regular schedule!
        image: gcr.io/cloudsql-docker/gce-proxy:1.17
        command:
          - "/cloud_sql_proxy"

          # If connecting from a VPC-native GKE cluster, you can use the
          # following flag to have the proxy connect over private IP
          # - "-ip_address_types=PRIVATE"

          # Replace DB_PORT with the port the proxy should listen on
          # Defaults: MySQL: 3306, Postgres: 5432, SQLServer: 1433
          - "-instances=users-service-289022:us-east1:mysql-db=tcp:3306"

        # [START cloud_sql_proxy_k8s_volume_mount]
          # This flag specifies where the service account key can be found
          - "-credential_file=/secrets/cloudsql/credentials.json"
        securityContext:
          # The default Cloud SQL proxy image runs as the
          # "nonroot" user and group (uid: 65532) by default.
          runAsNonRoot: true
        volumeMounts:
        - name: cloudsql-instance-credentials
          mountPath: /secrets/cloudsql
          readOnly: true
          # [END cloud_sql_proxy_k8s_volume_mount]
      # [START cloud_sql_proxy_k8s_volume_secret]
      volumes:
      - name: cloudsql-instance-credentials
        secret:
          secretName: cloudsql-instance-credentials
      # [START cloud_sql_proxy_k8s_volume_secret]







# apiVersion: extensions/v1beta1
# kind: Deployment
# metadata:
#   labels:
#     app: users-service
#   name: users-service
#   annotations:
#     deployment.kubernetes.io/revision: "1"
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: users-service
#   template:
#     metadata:
#       labels:
#         app: users-service
#     spec:
#       containers:
#         - image: gcr.io/users-service-289022/users-service:v1
#           imagePullPolicy: Always
#           name: users-service-container
#           ports:
#             - containerPort: 8080
#               name: app-port
#               protocol: TCP
#             - containerPort: 8081
#               name: admin-port
#               protocol: TCP
#           env:
#           - name: DB_USER
#             valueFrom:
#               secretKeyRef:
#                 name: cloudsql-db-credentials
#                 key: username
#           - name: DB_PASSWORD
#             valueFrom:
#               secretKeyRef:
#                 name: cloudsql-db-credentials
#                 key: password
#           resources: {}
#         - name: cloudsql-proxy
#           image: gcr.io/cloudsql-docker/gce-proxy:1.11
#           command: ["/cloud_sql_proxy",
#                     "-instances=lusers-service-289022:us-east1:mysql-db=tcp:3306",
#                     "-credential_file=/secrets/cloudsql/credentials.json"]
#           volumeMounts:
#             - name: cloudsql-instance-credentials
#               mountPath: /secrets/cloudsql
#               readOnly: true
#             - name: ssl-certs
#               mountPath: /etc/ssl/certs
#             - name: cloudsql
#               mountPath: /cloudsql
#       volumes:
#         - name: cloudsql-instance-credentials
#           secret:
#             secretName: cloudsql-instance-credentials
#         - name: cloudsql
#           emptyDir:
#         - name: ssl-certs
#           hostPath:
#             path: /etc/ssl/certs
#       dnsPolicy: ClusterFirst
#       restartPolicy: Always
#       schedulerName: default-scheduler